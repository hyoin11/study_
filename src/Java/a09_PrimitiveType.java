package Java;

public class a09_PrimitiveType {
	/*
	 * 기본 타입
	 * 타입은 해당 데이터가 메모리에 어떻게 저장되고, 프로그램에서 어떻게 처리되어야 하는지를 명시적으로 알려주는 역할
	 * 
	 * 정수형 타입
	 * 부호를 가지고 있으며, 소수 부분이 없는 수를 의미
	 * 	정수타입	할당되는 메모리의 크기	데이터의 표현 범위
	 * 	byte	1바이트				-128 ~ 127
	 * 	short	2바이트				-2^15 ~ (2^15 -1)
	 * 	int		4바이트				-2^31 ~ (2^31 -1)
	 * 	long	8바이트				-2^63 ~ (2^63 -1)
	 * 데이터 타입을 결정할 때에는 반드시 자신이 사용하고자 하는 데이터의 최대 크기를 고려해야함
	 * 해당 타입이 표현할 수 있는 범위를 벗어난 데이터를 저장하면, 오버플로우(overflow)가 발생해 전혀 다른 값이 저장될 수 있기 때문
	 * 오버플로우란 해당 타입이 표현할 수 있는 최대 범위보다 큰 수를 저장할 때 발생하는 현상을 가리킴
	 * 언더플로우(underflow)란 해당 타입이 표현할 수 있는 최소 범위보다 작은 수를 저장할 때 발생하는 현상
	 * 
	 * 실수형 타입
	 * 소수부나 지수부가 있는 수를 가리키며, 정수보다 훨씬 더 넓은 표현 범위를 가짐
	 * 과거에는 실수를 float형을 많이 사용했지만, 메모리 공간의 증가로 현재는 double형을 가장 많이 사용
	 * double이 기본형
	 * 	실수형 타입	지수의 길이	가수의 길이	유효 자릿수
	 * 	float		8비트			23비트		소수 부분 6자리까지
	 * 	double		11비트		52비트		소수 부분 15자리까지
	 * 
	 * 	실수형 타입	할당되는 메모리의 크기	데이터의 표현 범위						리터럴 타입 접미사
	 * 	float		4바이트				(3.4 * 10^-38) ~ (3.4 * 10^38)		F 또는 f
	 * 	double		8바이트				(1.7 * 10^-308) ~ (1.7 * 10^308)	D 또는 d(생략 가능함)
	 * 
	 * 문자형 타입
	 * 작은 정수나 문자 하나를 표현할 수 있는 타입을 의미
	 * 컴퓨터는 2진수밖에 인식하지 못하므로 문자도 숫자로 표현해야 인식할 ㅅ ㅜ있음
	 * 따라서 어떤 문자를 어떤 숫자에 대응시킬 것인가에 대한 약속이 필요함
	 * C와 C++ 에서는 아스키코드(ASCII)를 사용하여 문자를표현함
	 * 자바에서는 유니코드(unicode)를 사용하여 문자를 표현
	 * 아스키코드는 영문자와 숫자밖에 표현 못하지만 유니코드는 각 나라의 모든 언어를 표현할 ㅅ ㅜ있음
	 * 	문자형 타입	할당되는 메모리의 크기	데이터의 표현 범위
	 * 	char		2바이트				0~2^16
	 * 
	 * 논리형 타입
	 * 참(true)이나 거짓(false)중 한 가지 값만을 가질 수 있는 불리언 타입을 의미
	 * 기본값은 false
	 * 	논리형 타입	할당되는 메모리의 크기	데이터의 표현 범위
	 * 	boolean		1바이트				true or false
	 */
}
