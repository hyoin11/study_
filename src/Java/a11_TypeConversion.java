package Java;

public class a11_TypeConversion {
	/*
	 * 타입 변환
	 * 하나의 타입을 다른 타입으로 바꾸는 것을 타입변환이라고 함
	 * 자바에서는 boolean형을 제외한 나머지 기본 타입 간의 변환을 자유롭게 수행할 수 있음
	 * 자바에서 다른타입끼리의 연산은 우선 피연산자들을 모두 같은 타입으로 만든 후에 수행됨
	 * 메모리에 할당받은 바이트의 크기가 상대적으로 작은 타입에서 큰 타입으로의 타입 변환은 생략할 수 있음
	 * 하지만 큰 타입에서 작은 타입으로의 타입 변환은 데이터의 손실이 발생함
	 * 따라서 상대적으로 바이트의 크기가 작은 타입으로 타입 변환을 할 경우 자바 컴파일러는 오류를 발생시킴
	 * 
	 * 타입 변환의 종류
	 * 1. 묵시적 타입 변환(자동 타입 변환, implicit conversion)
	 * 	대입 연산이나 산술 연산에서 컴파일러가 자동으로 수행해주는 타입 변환을 가리킴
	 * 	자바에서는 데이터의 손실이 발생하지 않거나, 데이터의 손실이 최소화되는 방향으로 묵시적 타입 변환을 진행
	 * 	또한, 자바에서는 데이터의 손실이 발생하는 대입 연산은 허용하지 않음
	 * 	자바에서는 타입의 표현 범위에 따라 다음과 같은 방향으로 자동 타입 변환이 이루어짐
	 * 		byte -> short -> int -> long -> float -> double
	 * 				char -ㄱ
	 * 2. 명시적 타입 변환(강제 타입 변환, explicit conversion)
	 * 	사용자가 타입 캐스트 연산자(())를 사용하여 강제적으로 수행하는 타입 변환을 가리킴
	 * 	문법
	 * 		(변환할 타입) 변환할 데이터
	 */
}
