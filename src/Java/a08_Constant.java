package Java;

public class a08_Constant {
	/*
	 * 상수
	 * 변수와 마찬가지로 데이터를 저장할 수 있는 메모리 공간을 의미
	 * 변수와 다른 점은 프로그램이 실행되는 동안 메모리에 저장된 데이터를 변경할 수 없다는 점
	 * 선언과 동시에 반드시 초기화해야함
	 * 예제
	 * 	final int AGES = 30;
	 * 
	 * 리터럴(literal)
	 * 그 자체로 값을 의미하는 것
	 * 즉, 변수와 상수와는 달리 데이터가 저장된 메모리 공간을 가리키는 이름을 가지고 있지 않음
	 * 예제
	 * 	int var = 30;	// 30이 리터럴
	 * 	final int AGES = 100;	// 100이 리터럴
	 * 
	 * 타입에 따른 리터럴
	 * 1. 정수형 리터럴(Integer literals)은 123, -456과 같이 아라비아 숫자와 부호로 직접 표현
	 * 2. 실수형 리터럴(floating-point literals)은 3.14, -45.6과 같이 소수 부분을 가지는 아라비아 숫자로 표현
	 * 3. 논리형 리터럴(boolean literals)은 true, false로 표현
	 * 4. 문자형 리터럴(character literals)은 'a', 'Z'와 같이 작은 따옴표('')로 감싸진 문자로 표현
	 * 5. 문자열 리터럴(string literals)은 "자바", "홍길동"과 같이 큰따옴표("")로 감싸진 문자열로 표현됨
	 * 6. null 리터럴(null literals)은 단 하나의 값인 null로 표현
	 * 
	 * 리터럴 타입 접미사(literal type suffix)
	 * 3.14와 같은 실수형 리터럴을 그대로 사용하면 더블형으로 인식
	 * 하지만 실수형 리터럴 맨 뒤에 F나 f를 추가하면 자바는 해당 실수형 리터럴을 float으로 인식
	 * 이처럼 리터럴 뒤에 추가되어 해당 리터럴의 타입을 명시해주는 접미사를 리터럴 타입 접미사라고함
	 * 	타입 접미사		리터럴 타입	예제
	 * 	L 또는 l			long형		12345L
	 * 	F 또는 f			float형		1.234f
	 * 	D 또는 d(생략가능)	double형		1.234d
	 */
}
