package Java;

public class a30_constructor {
	/*
	 * 생성자
	 * 
	 * 인스턴스 변수의 초기화
	 * 자바에서 클래스 변수와 인스턴스 변수는 별도로 초기화하지 않으면 다음값으로 자동 초기화 됨
	 * 	변수의 타입			초깃값
	 * 	char				'\u0000'
	 * 	byte, short, int	0
	 * 	long				0L
	 * 	float				0F
	 * 	double				0.0 또는 0.0D
	 * 	boolean				false
	 * 	배열, 인스턴스 			null
	 * 사용자가 원하는 값으로 인스턴스 변수를 초기화하려면 일반적인 초기화 방식으로는 초기화 할 수 없음
	 * 인스턴스 변수 중에는 private 변수도 있으며, 이러한 private 변수에는 사용자나 프로그램이 직접 접근할 수 없기 때문
	 * 따라서 private 인스턴스 변수에도 접근할 수 있는 초기화만을 위한 public메소드가 필요함
	 * 이러한 초기화만을 위한 메소드는 객체가 생성된 후부터 사용되기 전까지 반드시 인스턴스 변수의 초기화를 위해 호출되어야 함
	 * 
	 * 생성자(constructor)
	 * 객체의 생성과 동시에 인스턴스 변수를 원하는 값으로 초기화할 수 있는 생성자(constructor)라는 메소드를 제공
	 * 생성자의 이름은 해당 클래스의 이름과 같아야함
	 * 	특징
	 * 	1. 반환값이 없지만, 반환 타입을 void형으로 선언하지 않음
	 * 	2. 초기화를 위한 데이터를 인수로 전달받을 수 있음
	 * 	3. 초기화하는 방법이 여러 개 존재할 경우에는 하나의 클래스가 여러개의 생성자를 가질 수 있음
	 * 		즉, 생성자도 하나의 메소드이므로, 메소드 오버로딩이 가능하다는 의미
	 * 
	 * 생성자의 선언
	 * 	문법
	 * 	1. 클래스이름(){...}	// 매개변수가 없는 생성자 선언
	 * 	2. 클래스이름(인수1, 인수2){...}	// 매개변수가 있는 생성자 선언
	 * 
	 * 생성자의 호출
	 * new키워드를 사용하여 객체를 생성할 때 자동으로 생성자가 호출됨
	 * 
	 * 기본 생성자(default constructor)
	 * 모든 클래스에는 하나 이상의 생성자가 정의되어 있어야 함
	 * 하지만 특별히 생성자를 정의하지 않고도 인스턴스를 생성할 수 있음
	 * 이것은 자바 컴파일러가 기본 생성자(default constructor)라는 것을 기본적으로 제공해 주기 때문
	 * 기본 생성자는 매개변수를 하나도 가지지 않으며, 아무런 명령어도 포함하고 있지 않음
	 * 	기본 생성자 문법
	 * 	클래스이름(){}
	 * 기본 생성자는 어떠한 매개변수도 전달받지 않으며, 기본적으로 아무런 동작도 하지 않음
	 */
}
